type Query {
  availabled_tours(
    input: AvailabledToursInput
  ): AvailabledToursOutput!
}

type Mutation {
  create_user_purchase(
    data: CreateUserPurchaseInput!
  ): CreateUserReservationOutput
}

type Mutation {
  login(
    data: LoginInput!
  ): LoginOutput
}

type Query {
  me: MeOutput
}

type Query {
  places(
    data: PlacesInput!
  ): [Places]
}

type Mutation {
  signup(
    data: SignupInput!
  ): SignupOutput
}

input SignupInput {
  name: String!
  description: String!
  person: jsonb!
  user: jsonb!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserPurchaseInput {
  package_id: uuid!
  travelers: [jsonb]
}

input PlacesInput {
  place: String!
}

input AvailabledToursInput {
  allowed_people: Int
  start_date: timestamptz
  end_date: timestamptz
  boarding: jsonb
  destiny: jsonb
}

type SignupOutput {
  token: String!
  id: uuid!
}

type LoginOutput {
  token: String!
  id: uuid
  name: String!
  agency_name: String
  email: String!
}

type CreateUserReservationOutput {
  purchase_id: uuid!
}

type MeOutput {
  me: jsonb!
}

type Places {
  type: String!
  id: Int!
  place: String!
}

type AvailabledToursOutput {
  tours: [jsonb]!
}

